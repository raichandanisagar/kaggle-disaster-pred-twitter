{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b6a0e970",
   "metadata": {},
   "source": [
    "### Imports & checks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b830a250",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>location</th>\n",
       "      <th>text</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Our Deeds are the Reason of this #earthquake M...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Forest fire near La Ronge Sask. Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>All residents asked to 'shelter in place' are ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13,000 people receive #wildfires evacuation or...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id keyword location                                               text  \\\n",
       "0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n",
       "1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n",
       "2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n",
       "3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n",
       "4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n",
       "\n",
       "   target  \n",
       "0       1  \n",
       "1       1  \n",
       "2       1  \n",
       "3       1  \n",
       "4       1  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>location</th>\n",
       "      <th>text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Just happened a terrible car crash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Heard about #earthquake is different cities, s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>there is a forest fire at spot pond, geese are...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Apocalypse lighting. #Spokane #wildfires</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Typhoon Soudelor kills 28 in China and Taiwan</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id keyword location                                               text\n",
       "0   0     NaN      NaN                 Just happened a terrible car crash\n",
       "1   2     NaN      NaN  Heard about #earthquake is different cities, s...\n",
       "2   3     NaN      NaN  there is a forest fire at spot pond, geese are...\n",
       "3   9     NaN      NaN           Apocalypse lighting. #Spokane #wildfires\n",
       "4  11     NaN      NaN      Typhoon Soudelor kills 28 in China and Taiwan"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Import libraries and read train test files\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "stemmer = WordNetLemmatizer()\n",
    "import re\n",
    "from sklearn.feature_extraction import text \n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "import seaborn as sns\n",
    "from urllib.parse import unquote,unquote_plus\n",
    "\n",
    "from IPython.core.display import display, HTML\n",
    "\n",
    "\n",
    "\n",
    "train_df = pd.read_csv('nlp-getting-started/train.csv')\n",
    "test_df = pd.read_csv('nlp-getting-started/test.csv')\n",
    "\n",
    "display(train_df.head(),test_df.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "52b29df6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>not_null</th>\n",
       "      <th>null</th>\n",
       "      <th>total</th>\n",
       "      <th>null_contribution</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <td>7613</td>\n",
       "      <td>0</td>\n",
       "      <td>7613</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>keyword</th>\n",
       "      <td>7552</td>\n",
       "      <td>61</td>\n",
       "      <td>7613</td>\n",
       "      <td>0.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>location</th>\n",
       "      <td>5080</td>\n",
       "      <td>2533</td>\n",
       "      <td>7613</td>\n",
       "      <td>33.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>text</th>\n",
       "      <td>7613</td>\n",
       "      <td>0</td>\n",
       "      <td>7613</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>target</th>\n",
       "      <td>7613</td>\n",
       "      <td>0</td>\n",
       "      <td>7613</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          not_null  null  total  null_contribution\n",
       "id            7613     0   7613               0.00\n",
       "keyword       7552    61   7613               0.80\n",
       "location      5080  2533   7613              33.27\n",
       "text          7613     0   7613               0.00\n",
       "target        7613     0   7613               0.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>not_null</th>\n",
       "      <th>null</th>\n",
       "      <th>total</th>\n",
       "      <th>null_contribution</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <td>3263</td>\n",
       "      <td>0</td>\n",
       "      <td>3263</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>keyword</th>\n",
       "      <td>3237</td>\n",
       "      <td>26</td>\n",
       "      <td>3263</td>\n",
       "      <td>0.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>location</th>\n",
       "      <td>2158</td>\n",
       "      <td>1105</td>\n",
       "      <td>3263</td>\n",
       "      <td>33.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>text</th>\n",
       "      <td>3263</td>\n",
       "      <td>0</td>\n",
       "      <td>3263</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          not_null  null  total  null_contribution\n",
       "id            3263     0   3263               0.00\n",
       "keyword       3237    26   3263               0.80\n",
       "location      2158  1105   3263              33.86\n",
       "text          3263     0   3263               0.00"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check missing data\n",
    "\n",
    "train_missing_df = pd.DataFrame(data=np.stack([train_df.count().values,train_df.isnull().sum().values],axis=1).tolist(),\n",
    "                                columns=['not_null','null'],\n",
    "                                index=train_df.count().index)\n",
    "train_missing_df['total'] = train_missing_df['not_null']+train_missing_df['null']\n",
    "train_missing_df['null_contribution'] = np.round((train_missing_df['null']/train_missing_df['total'])*100,2)\n",
    "\n",
    "test_missing_df = pd.DataFrame(data=np.stack([test_df.count().values,test_df.isnull().sum().values],axis=1).tolist(),\n",
    "                                columns=['not_null','null'],\n",
    "                                index=test_df.count().index)\n",
    "test_missing_df['total'] = test_missing_df['not_null']+test_missing_df['null']\n",
    "test_missing_df['null_contribution'] = np.round((test_missing_df['null']/test_missing_df['total'])*100,2)\n",
    "\n",
    "\n",
    "display(train_missing_df,test_missing_df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "905d9a4c",
   "metadata": {},
   "source": [
    "In train and test datasets, features *location* and *keyword* have ~33% and ~0.8% nulls respectively. Let's drop location for now"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eb13734c",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df.drop(labels=['location'],axis=1,inplace=True)\n",
    "test_df.drop(labels=['location'],axis=1,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "594231e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    4342\n",
       "1    3271\n",
       "Name: target, dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check split of disaster and non-disaster tweets\n",
    "train_df['target'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c657e752",
   "metadata": {},
   "source": [
    "Decent ~43/57 split. Can work without any resampling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "def49365",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>text</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Our Deeds are the Reason of this #earthquake M...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Forest fire near La Ronge Sask. Canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>All residents asked to 'shelter in place' are ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13,000 people receive #wildfires evacuation or...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>#RockyFire Update =&gt; California Hwy. 20 closed...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>#flood #disaster Heavy rain causes flash flood...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>13</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I'm on top of the hill and I can see a fire in...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>14</td>\n",
       "      <td>NaN</td>\n",
       "      <td>There's an emergency evacuation happening now ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I'm afraid that the tornado is coming to our a...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Three people died from the heat wave so far</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Haha South Tampa is getting flooded hah- WAIT ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>#raining #flooding #Florida #TampaBay #Tampa 1...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>#Flood in Bago Myanmar #We arrived Bago</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Damage to school bus on 80 in multi car crash ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>48</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>@bbcmtd Wholesale Markets ablaze http://t.co/l...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>50</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>#AFRICANBAZE: Breaking news:Nigeria flag set a...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>55</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>INEC Office in Abia Set Ablaze - http://t.co/3...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>56</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Barbados #Bridgetown JAMAICA ÛÒ Two cars set ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>66</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>How the West was burned: Thousands of wildfire...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>73</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Deputies: Man shot before Brighton home set ab...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>74</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Man wife get six years jail for setting ablaze...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>77</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Police: Arsonist Deliberately Set Black Church...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>79</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>#Kurds trampling on Turkmen flag later set it ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>80</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>TRUCK ABLAZE : R21. VOORTREKKER AVE. OUTSIDE O...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>83</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>How the West was burned: Thousands of wildfire...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>91</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>@Navista7 Steve these fires out here are somet...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>93</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>@nxwestmidlands huge fire at Wholesale markets...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>97</td>\n",
       "      <td>accident</td>\n",
       "      <td>Accident on I-24 W #NashvilleTraffic. Traffic ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>98</td>\n",
       "      <td>accident</td>\n",
       "      <td>Accident center lane blocked in #SantaClara on...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>104</td>\n",
       "      <td>accident</td>\n",
       "      <td>Reported motor vehicle accident in Curry on He...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>105</td>\n",
       "      <td>accident</td>\n",
       "      <td>BigRigRadio Live Accident Awareness</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>107</td>\n",
       "      <td>accident</td>\n",
       "      <td>I-77 Mile Marker 31 South Mooresville  Iredell...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>112</td>\n",
       "      <td>accident</td>\n",
       "      <td>Traffic accident N CABRILLO HWY/MAGELLAN AV MI...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>113</td>\n",
       "      <td>accident</td>\n",
       "      <td>I-77 Mile Marker 31 to 40 South Mooresville  I...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>114</td>\n",
       "      <td>accident</td>\n",
       "      <td>the pastor was not in the scene of the acciden...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>118</td>\n",
       "      <td>accident</td>\n",
       "      <td>I was in a horrible car accident this past Sun...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>120</td>\n",
       "      <td>accident</td>\n",
       "      <td>#TruckCrash Overturns On #FortWorth Interstate...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>121</td>\n",
       "      <td>accident</td>\n",
       "      <td>Accident in #Ashville on US 23 SB before SR 75...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>126</td>\n",
       "      <td>accident</td>\n",
       "      <td>Carolina accident: Motorcyclist Dies in I-540 ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>128</td>\n",
       "      <td>accident</td>\n",
       "      <td>FYI CAD:FYI: ;ACCIDENT PROPERTY DAMAGE;NHS;999...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>129</td>\n",
       "      <td>accident</td>\n",
       "      <td>RT nAAYf: First accident in years. Turning ont...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>130</td>\n",
       "      <td>accident</td>\n",
       "      <td>Accident left lane blocked in #Manchester on R...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>131</td>\n",
       "      <td>accident</td>\n",
       "      <td>;ACCIDENT PROPERTY DAMAGE; PINER RD/HORNDALE DR</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>133</td>\n",
       "      <td>accident</td>\n",
       "      <td>FYI CAD:FYI: ;ACCIDENT PROPERTY DAMAGE;WPD;160...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>134</td>\n",
       "      <td>accident</td>\n",
       "      <td>8/6/2015@2:09 PM: TRAFFIC ACCIDENT NO INJURY a...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>135</td>\n",
       "      <td>accident</td>\n",
       "      <td>Aashiqui Actress Anu Aggarwal On Her Near-Fata...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>136</td>\n",
       "      <td>accident</td>\n",
       "      <td>Suffield Alberta Accident https://t.co/bPTmlF4P10</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>137</td>\n",
       "      <td>accident</td>\n",
       "      <td>9 Mile backup on I-77 South...accident blockin...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>139</td>\n",
       "      <td>accident</td>\n",
       "      <td>#BREAKING: there was a deadly motorcycle car a...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     id   keyword                                               text  target\n",
       "0     1       NaN  Our Deeds are the Reason of this #earthquake M...       1\n",
       "1     4       NaN             Forest fire near La Ronge Sask. Canada       1\n",
       "2     5       NaN  All residents asked to 'shelter in place' are ...       1\n",
       "3     6       NaN  13,000 people receive #wildfires evacuation or...       1\n",
       "4     7       NaN  Just got sent this photo from Ruby #Alaska as ...       1\n",
       "5     8       NaN  #RockyFire Update => California Hwy. 20 closed...       1\n",
       "6    10       NaN  #flood #disaster Heavy rain causes flash flood...       1\n",
       "7    13       NaN  I'm on top of the hill and I can see a fire in...       1\n",
       "8    14       NaN  There's an emergency evacuation happening now ...       1\n",
       "9    15       NaN  I'm afraid that the tornado is coming to our a...       1\n",
       "10   16       NaN        Three people died from the heat wave so far       1\n",
       "11   17       NaN  Haha South Tampa is getting flooded hah- WAIT ...       1\n",
       "12   18       NaN  #raining #flooding #Florida #TampaBay #Tampa 1...       1\n",
       "13   19       NaN            #Flood in Bago Myanmar #We arrived Bago       1\n",
       "14   20       NaN  Damage to school bus on 80 in multi car crash ...       1\n",
       "31   48    ablaze  @bbcmtd Wholesale Markets ablaze http://t.co/l...       1\n",
       "33   50    ablaze  #AFRICANBAZE: Breaking news:Nigeria flag set a...       1\n",
       "37   55    ablaze  INEC Office in Abia Set Ablaze - http://t.co/3...       1\n",
       "38   56    ablaze  Barbados #Bridgetown JAMAICA ÛÒ Two cars set ...       1\n",
       "46   66    ablaze  How the West was burned: Thousands of wildfire...       1\n",
       "50   73    ablaze  Deputies: Man shot before Brighton home set ab...       1\n",
       "51   74    ablaze  Man wife get six years jail for setting ablaze...       1\n",
       "53   77    ablaze  Police: Arsonist Deliberately Set Black Church...       1\n",
       "55   79    ablaze  #Kurds trampling on Turkmen flag later set it ...       1\n",
       "56   80    ablaze  TRUCK ABLAZE : R21. VOORTREKKER AVE. OUTSIDE O...       1\n",
       "59   83    ablaze  How the West was burned: Thousands of wildfire...       1\n",
       "63   91    ablaze  @Navista7 Steve these fires out here are somet...       1\n",
       "65   93    ablaze  @nxwestmidlands huge fire at Wholesale markets...       1\n",
       "68   97  accident  Accident on I-24 W #NashvilleTraffic. Traffic ...       1\n",
       "69   98  accident  Accident center lane blocked in #SantaClara on...       1\n",
       "72  104  accident  Reported motor vehicle accident in Curry on He...       1\n",
       "73  105  accident                BigRigRadio Live Accident Awareness       1\n",
       "74  107  accident  I-77 Mile Marker 31 South Mooresville  Iredell...       1\n",
       "77  112  accident  Traffic accident N CABRILLO HWY/MAGELLAN AV MI...       1\n",
       "78  113  accident  I-77 Mile Marker 31 to 40 South Mooresville  I...       1\n",
       "79  114  accident  the pastor was not in the scene of the acciden...       1\n",
       "81  118  accident  I was in a horrible car accident this past Sun...       1\n",
       "83  120  accident  #TruckCrash Overturns On #FortWorth Interstate...       1\n",
       "84  121  accident  Accident in #Ashville on US 23 SB before SR 75...       1\n",
       "85  126  accident  Carolina accident: Motorcyclist Dies in I-540 ...       1\n",
       "86  128  accident  FYI CAD:FYI: ;ACCIDENT PROPERTY DAMAGE;NHS;999...       1\n",
       "87  129  accident  RT nAAYf: First accident in years. Turning ont...       1\n",
       "88  130  accident  Accident left lane blocked in #Manchester on R...       1\n",
       "89  131  accident    ;ACCIDENT PROPERTY DAMAGE; PINER RD/HORNDALE DR       1\n",
       "91  133  accident  FYI CAD:FYI: ;ACCIDENT PROPERTY DAMAGE;WPD;160...       1\n",
       "92  134  accident  8/6/2015@2:09 PM: TRAFFIC ACCIDENT NO INJURY a...       1\n",
       "93  135  accident  Aashiqui Actress Anu Aggarwal On Her Near-Fata...       1\n",
       "94  136  accident  Suffield Alberta Accident https://t.co/bPTmlF4P10       1\n",
       "95  137  accident  9 Mile backup on I-77 South...accident blockin...       1\n",
       "97  139  accident  #BREAKING: there was a deadly motorcycle car a...       1"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check some disaster tweets\n",
    "train_df[train_df['target']==1].head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f134f713",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>text</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>23</td>\n",
       "      <td>NaN</td>\n",
       "      <td>What's up man?</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "      <td>I love fruits</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Summer is lovely</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "      <td>My car is so fast</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>28</td>\n",
       "      <td>NaN</td>\n",
       "      <td>What a goooooooaaaaaal!!!!!!</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>31</td>\n",
       "      <td>NaN</td>\n",
       "      <td>this is ridiculous....</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>32</td>\n",
       "      <td>NaN</td>\n",
       "      <td>London is cool ;)</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>33</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Love skiing</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>34</td>\n",
       "      <td>NaN</td>\n",
       "      <td>What a wonderful day!</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>36</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LOOOOOOL</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>37</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No way...I can't eat that shit</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>38</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Was in NYC last week!</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>39</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Love my girlfriend</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cooool :)</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Do you like pasta?</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>The end!</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>49</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>We always try to bring the heavy. #metal #RT h...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>52</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Crying out for more! Set me ablaze</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>53</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>On plus side LOOK AT THE SKY LAST NIGHT IT WAS...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>54</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>@PhDSquares #mufc they've built so much hype a...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>57</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Ablaze for you Lord :D</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>59</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Check these out: http://t.co/rOI2NSmEJJ http:/...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>61</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>on the outside you're ablaze and alive\\nbut yo...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>62</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Had an awesome time visiting the CFC head offi...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>63</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>SOOOO PUMPED FOR ABLAZE ???? @southridgelife</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>64</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>I wanted to set Chicago ablaze with my preachi...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>65</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>I gained 3 followers in the last week. You? Kn...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>67</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Building the perfect tracklist to life leave t...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>68</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Check these out: http://t.co/rOI2NSmEJJ http:/...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>71</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>First night with retainers in. It's quite weir...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>76</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>SANTA CRUZ ÛÓ Head of the St Elizabeth Police...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>78</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Noches El-Bestia '@Alexis_Sanchez: happy to se...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>81</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Set our hearts ablaze and every city was a gif...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>82</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>They sky was ablaze tonight in Los Angeles. I'...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>85</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Revel in yours wmv videos by means of mac fare...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>86</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Progressive greetings!\\n\\nIn about a month stu...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>89</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>Rene Ablaze &amp;amp; Jacinta - Secret 2k13 (Falle...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>92</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>#NowPlaying: Rene Ablaze &amp;amp; Ian Buff - Magn...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>95</td>\n",
       "      <td>ablaze</td>\n",
       "      <td>@ablaze what time does your talk go until? I d...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>96</td>\n",
       "      <td>accident</td>\n",
       "      <td>'I can't have kids cuz I got in a bicycle acci...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>100</td>\n",
       "      <td>accident</td>\n",
       "      <td>http://t.co/GKYe6gjTk5 Had a #personalinjury a...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>102</td>\n",
       "      <td>accident</td>\n",
       "      <td>#stlouis #caraccidentlawyer Speeding Among Top...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>109</td>\n",
       "      <td>accident</td>\n",
       "      <td>RT @SleepJunkies: Sleeping pills double your r...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>110</td>\n",
       "      <td>accident</td>\n",
       "      <td>'By accident' they knew what was gon happen ht...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>117</td>\n",
       "      <td>accident</td>\n",
       "      <td>mom: 'we didn't get home as fast as we wished'...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>119</td>\n",
       "      <td>accident</td>\n",
       "      <td>Can wait to see how pissed Donnie is when I te...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>132</td>\n",
       "      <td>accident</td>\n",
       "      <td>???? it was an accident http://t.co/Oia5fxi4gM</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>138</td>\n",
       "      <td>accident</td>\n",
       "      <td>Has an accident changed your life? We will hel...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>141</td>\n",
       "      <td>accident</td>\n",
       "      <td>@flowri were you marinading it or was it an ac...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>145</td>\n",
       "      <td>accident</td>\n",
       "      <td>I still have not heard Church Leaders of Kenya...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id   keyword                                               text  target\n",
       "15    23       NaN                                     What's up man?       0\n",
       "16    24       NaN                                      I love fruits       0\n",
       "17    25       NaN                                   Summer is lovely       0\n",
       "18    26       NaN                                  My car is so fast       0\n",
       "19    28       NaN                       What a goooooooaaaaaal!!!!!!       0\n",
       "20    31       NaN                             this is ridiculous....       0\n",
       "21    32       NaN                                  London is cool ;)       0\n",
       "22    33       NaN                                        Love skiing       0\n",
       "23    34       NaN                              What a wonderful day!       0\n",
       "24    36       NaN                                           LOOOOOOL       0\n",
       "25    37       NaN                     No way...I can't eat that shit       0\n",
       "26    38       NaN                              Was in NYC last week!       0\n",
       "27    39       NaN                                 Love my girlfriend       0\n",
       "28    40       NaN                                          Cooool :)       0\n",
       "29    41       NaN                                 Do you like pasta?       0\n",
       "30    44       NaN                                           The end!       0\n",
       "32    49    ablaze  We always try to bring the heavy. #metal #RT h...       0\n",
       "34    52    ablaze                 Crying out for more! Set me ablaze       0\n",
       "35    53    ablaze  On plus side LOOK AT THE SKY LAST NIGHT IT WAS...       0\n",
       "36    54    ablaze  @PhDSquares #mufc they've built so much hype a...       0\n",
       "39    57    ablaze                             Ablaze for you Lord :D       0\n",
       "40    59    ablaze  Check these out: http://t.co/rOI2NSmEJJ http:/...       0\n",
       "41    61    ablaze  on the outside you're ablaze and alive\\nbut yo...       0\n",
       "42    62    ablaze  Had an awesome time visiting the CFC head offi...       0\n",
       "43    63    ablaze       SOOOO PUMPED FOR ABLAZE ???? @southridgelife       0\n",
       "44    64    ablaze  I wanted to set Chicago ablaze with my preachi...       0\n",
       "45    65    ablaze  I gained 3 followers in the last week. You? Kn...       0\n",
       "47    67    ablaze  Building the perfect tracklist to life leave t...       0\n",
       "48    68    ablaze  Check these out: http://t.co/rOI2NSmEJJ http:/...       0\n",
       "49    71    ablaze  First night with retainers in. It's quite weir...       0\n",
       "52    76    ablaze  SANTA CRUZ ÛÓ Head of the St Elizabeth Police...       0\n",
       "54    78    ablaze  Noches El-Bestia '@Alexis_Sanchez: happy to se...       0\n",
       "57    81    ablaze  Set our hearts ablaze and every city was a gif...       0\n",
       "58    82    ablaze  They sky was ablaze tonight in Los Angeles. I'...       0\n",
       "60    85    ablaze  Revel in yours wmv videos by means of mac fare...       0\n",
       "61    86    ablaze  Progressive greetings!\\n\\nIn about a month stu...       0\n",
       "62    89    ablaze  Rene Ablaze &amp; Jacinta - Secret 2k13 (Falle...       0\n",
       "64    92    ablaze  #NowPlaying: Rene Ablaze &amp; Ian Buff - Magn...       0\n",
       "66    95    ablaze  @ablaze what time does your talk go until? I d...       0\n",
       "67    96  accident  'I can't have kids cuz I got in a bicycle acci...       0\n",
       "70   100  accident  http://t.co/GKYe6gjTk5 Had a #personalinjury a...       0\n",
       "71   102  accident  #stlouis #caraccidentlawyer Speeding Among Top...       0\n",
       "75   109  accident  RT @SleepJunkies: Sleeping pills double your r...       0\n",
       "76   110  accident  'By accident' they knew what was gon happen ht...       0\n",
       "80   117  accident  mom: 'we didn't get home as fast as we wished'...       0\n",
       "82   119  accident  Can wait to see how pissed Donnie is when I te...       0\n",
       "90   132  accident     ???? it was an accident http://t.co/Oia5fxi4gM       0\n",
       "96   138  accident  Has an accident changed your life? We will hel...       0\n",
       "98   141  accident  @flowri were you marinading it or was it an ac...       0\n",
       "101  145  accident  I still have not heard Church Leaders of Kenya...       0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check some non-disaster tweets\n",
    "train_df[train_df['target']==0].head(50)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "646547ab",
   "metadata": {},
   "source": [
    "#### Preliminary observations\n",
    "-Not sure if we can use keyword field as a feature. Word cloud might help<br>\n",
    "-Are disaster tweets longer?<br>\n",
    "-Hashtags should be captured separately-- might be a useful feature<br>\n",
    "-Text requires cleaning; links, tags, punctuations can be removed<br>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff530f54",
   "metadata": {},
   "source": [
    "#### Checking keywords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e18cf72b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x10eef4748>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Top 20 keywords in disaster tweets\n",
    "\n",
    "plt.figure(figsize=(12,8))\n",
    "sns.countplot(y= train_df[train_df['target']==1].keyword, \n",
    "              order= train_df[train_df['target']==1].keyword.value_counts().iloc[:20].index)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "17a274a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x12b3a9128>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Top 20 keywords in non-disaster tweets\n",
    "\n",
    "plt.figure(figsize=(12,8))\n",
    "sns.countplot(y= train_df[train_df['target']==0].keyword, \n",
    "              order= train_df[train_df['target']==0].keyword.value_counts().iloc[:20].index)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9c6050d1",
   "metadata": {},
   "source": [
    "### Text Cleaning\n",
    "Lowercase<br>\n",
    "Remove all special characters-- commas, quotes, fullstops, etc.<br>\n",
    "Remove stop words<br>\n",
    "Remove links and handle tags (http:, www., @, etc.)<br>\n",
    "Stemming/Lemmatization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "42039c1b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>keyword</th>\n",
       "      <th>text</th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>deed reason earthquake may allah forgive u</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>None</td>\n",
       "      <td>forest fire near la ronge sask canada</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>None</td>\n",
       "      <td>resident asked shelter place notified officer ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>None</td>\n",
       "      <td>13000 people receive wildfire evacuation order...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7</td>\n",
       "      <td>None</td>\n",
       "      <td>got sent photo ruby alaska smoke wildfire pour...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id keyword                                               text  target\n",
       "0   1    None         deed reason earthquake may allah forgive u       1\n",
       "1   4    None              forest fire near la ronge sask canada       1\n",
       "2   5    None  resident asked shelter place notified officer ...       1\n",
       "3   6    None  13000 people receive wildfire evacuation order...       1\n",
       "4   7    None  got sent photo ruby alaska smoke wildfire pour...       1"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import time\n",
    "\n",
    "def clean_text_data(text):\n",
    "    if(pd.isna(text)):\n",
    "        return None\n",
    "    text = unquote(unquote_plus(text.lower().lstrip().rstrip())) #lower text, remove trailing, starting spaces, encodings like %20, +\n",
    "    text = re.sub(r'http.*?\\s+|www\\..*?\\s+|http.*?$|www\\..*?$|@.*?\\b','',text) #remove links, sites and tags\n",
    "    text = re.sub(r'[^A-Za-z0-9\\s\\-]+|[^A-Za-z0-9\\s\\-]','',text) #remove special characters\n",
    "    text = re.sub(r'\\-',' ',text) #replace hyphen with space\n",
    "    text = re.sub(r'\\s+',' ',text) #remove multi space with single space\n",
    "    text = ' '.join([stemmer.lemmatize(word) for word in text.split() if word not in stopwords.words('english')]) #remove stop words and stem\n",
    "    return text\n",
    "\n",
    "vec_clean_text_data = np.vectorize(clean_text_data) #vectorize for faster processing\n",
    "\n",
    "\n",
    "train_df['text'] = vec_clean_text_data(train_df['text'].values)\n",
    "test_df['text'] = vec_clean_text_data(test_df['text'].values)\n",
    "train_df['keyword'] = vec_clean_text_data(train_df['keyword'].values)\n",
    "test_df['keyword'] = vec_clean_text_data(test_df['keyword'].values)\n",
    "\n",
    "train_df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "095967f4",
   "metadata": {},
   "source": [
    "### Baseline TF-IDF LR model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "17c08b25",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import f1_score, classification_report\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "79d6bb4d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split train_df into train_data and validation_data\n",
    "train_data,validation_data = train_test_split(train_df, test_size=0.33)\n",
    "\n",
    "# ignoring terms that appear in less than 5 documents and more than 90% of the documents;\n",
    "tfidf = TfidfVectorizer(min_df=5, max_df=0.9, ngram_range=(1,2))\n",
    "X = tfidf.fit_transform(train_data[\"text\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "183f98a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==================== Training data ====================\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.84      0.94      0.89      2895\n",
      "           1       0.91      0.77      0.83      2205\n",
      "\n",
      "    accuracy                           0.87      5100\n",
      "   macro avg       0.87      0.86      0.86      5100\n",
      "weighted avg       0.87      0.87      0.86      5100\n",
      "\n",
      "==================== Test data ========================\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.80      0.88      0.84      1447\n",
      "           1       0.81      0.69      0.75      1066\n",
      "\n",
      "    accuracy                           0.80      2513\n",
      "   macro avg       0.80      0.79      0.79      2513\n",
      "weighted avg       0.80      0.80      0.80      2513\n",
      "\n"
     ]
    }
   ],
   "source": [
    "logit = LogisticRegression()\n",
    "logit.fit(X, train_data['target'].values)\n",
    "\n",
    "train_ylabels = logit.predict(X)\n",
    "\n",
    "print(20*\"=\", \"Training data\", 20*\"=\")\n",
    "print(classification_report(y_true=train_data['target'].values, y_pred=train_ylabels))\n",
    "\n",
    "\n",
    "X_val = tfidf.transform(validation_data[\"text\"])\n",
    "val_ylabels = logit.predict(X_val)\n",
    "\n",
    "\n",
    "print(20*\"=\", \"Test data\", 24*\"=\")\n",
    "print(classification_report(y_true=validation_data['target'].values, y_pred=val_ylabels))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "14098686",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test = tfidf.transform(test_df[\"text\"])\n",
    "test_ylabels = logit.predict(X_test)\n",
    "\n",
    "sample_sub=pd.read_csv('nlp-getting-started/sample_submission.csv')\n",
    "sub=pd.DataFrame({'id':sample_sub['id'].values.tolist(),'target':test_ylabels})\n",
    "sub.to_csv('submission.csv',index=False)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
